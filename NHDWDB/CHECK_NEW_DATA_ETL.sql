
DROP FUNCTION IF EXISTS GET_CONNECTION_STRING;
GO

CREATE FUNCTION GET_CONNECTION_STRING() RETURNS NVARCHAR(MAX) AS
BEGIN
    RETURN 'Server=dad.cbrifzw8clzr.us-east-1.rds.amazonaws.com;UID=ldtreadonly;PWD=Kitemud$41;';
END;
GO

-- CREATE A COMMAND STRING.
BEGIN
    DECLARE @COMMAND1 NVARCHAR(MAX);
    SET @COMMAND1 = 'SELECT * FROM OPENROWSET(''SQLNCLI'', ' +
                    '''Server=dad.cbrifzw8clzr.us-east-1.rds.amazonaws.com;UID=ldtreadonly;PWD=Kitemud$41;'',' +
                    '''SELECT * FROM DDDM_TPS_1.dbo.PATIENT'');'
    -- PRINT(@COMMAND1);          
    EXEC(@COMMAND1);
END
-- CREATE A COMMAND STRING WITH WHERE LOGIC.
BEGIN
    DECLARE @COMMAND2 NVARCHAR(MAX);
    SET @COMMAND2 = 'SELECT * FROM OPENROWSET(''SQLNCLI'', ' +
                    '''Server=dad.cbrifzw8clzr.us-east-1.rds.amazonaws.com;UID=ldtreadonly;PWD=Kitemud$41;'',' +
                    '''SELECT * FROM DDDM_TPS_1.dbo.PATIENT WHERE URNUMBER NOT IN (900000001, 900000002)'');'
    -- PRINT(@COMMAND2);          
    EXEC(@COMMAND2);
END
-- CREATE A COMMAND STRING USING ROWNUMS.
-- SELECT * FROM LIST_OF_ROWNUMS;
BEGIN
-- GO AND GET THE CONNECTION STRING.
    DECLARE @CONNSTRING NVARCHAR(MAX);
    EXEC @CONNSTRING = GET_CONNECTION_STRING;
-- SET UP A STRING OF XXX TO EXCLUDE FROM COMMAND
    DECLARE @ROWNUMS NVARCHAR(MAX);
    SELECT @ROWNUMS = COALESCE(@ROWNUMS + ',', '') + ROWNUM
    FROM NHDW_LDT_0214.DBO.LIST_OF_ROWNUMS
    PRINT (@ROWNUMS);
--CREATE THE COMMAND TO SEND TO THE OTHER SERVER
    DECLARE @COMMAND NVARCHAR(MAX);
    SET @COMMAND = 'SELECT * FROM OPENROWSET(''SQLNCLI'', ' +
                    '''' + @CONNSTRING + ''',' +
                    '''SELECT * FROM DDDM_TPS_1.dbo.PATIENT WHERE URNUMBER NOT IN (' + @ROWNUMS + ')'');'
    -- PRINT(@COMMAND);          
    EXEC(@COMMAND);
END
-- BEGIN
--     DECLARE @COMMAND3 NVARCHAR(MAX);
--     SET @COMMAND3 = 'SELECT * FROM OPENROWSET(''SQLNCLI'', ' +
--                     '''Server=dad.cbrifzw8clzr.us-east-1.rds.amazonaws.com;UID=ldtreadonly;PWD=Kitemud$41;'',' +
--                     '''SELECT * FROM DDDM_TPS_1.dbo.PATIENT WHERE URNUMBER NOT IN (' + @ROWNUMS + ')'');'
--     -- PRINT(@COMMAND3);          
--     EXEC(@COMMAND3);
-- END
    

	--THIS CREATES A STRING WHICH IS A LIST OF THE SOURCE ID'S IN DWPATIENT
	DECLARE @ALREADY_IN_DIM NVARCHAR(MAX);
    SELECT @ALREADY_IN_DIM = COALESCE(@ALREADY_IN_DIM + ',', '') + NHDW.dbo.DIMPATIENT.DWDIM_SOURCEID
    FROM NHDW.dbo.DIMPATIENT
	--WHERE DIMPATIENT.DWDIM_SOURCEDB = 'NHRM'

	--THIS CREATES A STRING WHICH IS A LIST OF THE SOURCE ID'S IN ERROREVENT
	DECLARE @ERROR_EVENT_EXISTING NVARCHAR(MAX);
    SELECT @ERROR_EVENT_EXISTING = COALESCE(@ERROR_EVENT_EXISTING + ',', '') +  ERROREVENT.SOURCE_ID
    FROM NHDW.dbo.ERROREVENT
	--WHERE SOURCE_DB = 'NHRM';

	--COMBINE THE TWO LISTS OF NUMBERS INTO ONE VARIABLE TO BE PUSHED IN TTHE QUERY BELOW
	DECLARE @TO_EXCLUDE NVARCHAR(MAX);
	SET @TO_EXCLUDE = @ALREADY_IN_DIM + ', ' + @ERROR_EVENT_EXISTING;

	    -- write the code to get the required data - excludes those identified above.
    DECLARE @CONNSTRING NVARCHAR(MAX);
    EXECUTE @CONNSTRING = GET_CONNECTION_STRING;

     DECLARE @SELECTQUERY NVARCHAR(MAX);
    SET @SELECTQUERY = '''SELECT URNUMBER, GENDER, YEAR(DOB) AS YEAROFBIRTH,' +
                    'SUBURB, POSTCODE, COUNTRYOFBIRTH, LIVESALONE, ACTIVE, ' +
                    '(SELECT TOP 1 DIAGNOSIS FROM DDDM_TPS_1.DBO.CONDITIONDETAILS CD WHERE CD.URNUMBER = P.URNUMBER) AS [DIAGNOSIS],' +
                    '(SELECT TOP 1 CATEGORYNAME FROM DDDM_TPS_1.DBO.PATIENTCATEGORY PC' +
                    ' INNER JOIN DDDM_TPS_1.DBO.TEMPLATECATEGORY TC' +
                    ' ON PC.CATEGORYID = TC.CATEGORYID' +
                    ' WHERE PC.URNUMBER = P.URNUMBER) AS [CATEGORY], ' +
                    '(SELECT TOP 1 PROCEDUREDATE FROM DDDM_TPS_1.DBO.CONDITIONDETAILS CD WHERE CD.URNUMBER = P.URNUMBER) AS [PROCEDURE],' +
                    ' FROM DDDM_TPS_1.DBO.PATIENT P WHERE URNUMBER NOT IN (' + @TO_EXCLUDE + ')''';

    DECLARE @INSERTQUERY NVARCHAR(MAX);
    SET @INSERTQUERY = 'INSERT INTO  #PatientTempTable(DWDIM_PATIENTID, DWDIM_SOURCEDB, DWDIM_SOURCETABLE, DWDIM_SOURCEID, GENDER, YEAROFBIRTH,)' +
                    'SELECT NEXT VALUE FOR DWDIM_PATIENTID, ''NHRM'', SOURCE.URNUMBER, SOURCE.GENDER, SOURCE.YEAROFBIRTH';
    DECLARE @COMMAND NVARCHAR(MAX);
    SET @COMMAND = @INSERTQUERY + ' FROM OPENROWSET(''SQLNCLI'', ' + '''' + @CONNSTRING + ''',' + @SELECTQUERY + ') SOURCE;'
    PRINT(@COMMAND);
    EXECUTE(@COMMAND);