CREATE PROCEDURE DIM_PATIENT_FILTER_1
AS
BEGIN
	BEGIN TRY
			DECLARE @SOURCE_PROC NVARCHAR(50) = 'DIM_PATIENT_FILTER_1' , @ETL_EVENT_DATE NVARCHAR(50) = SYSDATETIME(), @ETL_EVENT_DETAILS NVARCHAR(50) = 'MODIFY'
			begin tran @patientFilter1

			---- MALE AND FEMALE GENDER SELECTOR
			----GET A LIST OF ALL PATIENTS IN THE DW @DWPATIENTLIST
			--SELECT * 
			--INTO #TEMP_PATIENT_DATA
			--FROM TPS.SOURCE.DATA
			--WHERE DIMPATIENT.SOURCEID NOT IN (SELECT SOURCEID FROM TPS.DBO.SOURCEI
			--//transactiona
			--checkpoints
			=---mssqltips.com/sqlservertip/5538/understanding-sql-server-transaction-savepoints
			--GET ALL PATIENTS FROM THE SOURCE DB WHERE NOT IN @DWPATIENTLIST

			INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
			SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), PATIENTID), 'PATIENT', 1, (SELECT SYSDATETIME()), 'MODIFY'
			FROM @DWPATIENTLIST
			WHERE PATIENT.GENDER IS NULL OR UPPER(GENDER) NOT IN ('M', 'F', 'I');
			
			--ANY ERRORS GOES INTO THE ERROR TABLE
			INSERT INTO ETL_LOG ( SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
			VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ETL_EVENT_DETAILS);
			commit tran @patientFilter1
	END TRY
	BEGIN CATCH
			--IF THERE IS AN ERROR THROW IN TO THE LOG TABLE

			 BEGIN
				rollback tran @patientFilter1
                DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
                INSERT INTO ETL_LOG ( SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
				VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ERRORMESSAGE);
			 END; 
	END CATCH

END